#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

int mini(int low, int newl){
  if (low<newl) {
    return low;
  } else {return newl;}

}

bool all_unique(const vector<int>& array){
    for (int i = 0; i<array.size();++i){
        for (int j = i+1; j<array.size();++j){
            if (array[i] == array[j]){
                return false;
            }
        }
    }
    return true;
}

int fourth(vector<vector<int>>& matrix){
  int min = -1;
  for (int c1=1;c1<4;++c1){
    for (int c2=1;c2<4;++c2){
      for (int c3=1;c3<4;++c3){
        vector<int> path = {0, c1, c2, c3};
        if (all_unique(path)) {
          path.push_back(0);
          int l=0;
          for (int i=0;i<4;++i){
            l += matrix[path[i]][path[i+1]];
          }
          if(min == -1 || l < min){
            min = l;
          }
        }
      }
    }
  }
  return min;
}

int fifth(vector<vector<int>>& matrix){
  int min = -1;
  for (int c1=1;c1<5;++c1){
    for (int c2=1;c2<5;++c2){
      for (int c3=1;c3<5;++c3){
        for (int c4=1;c4<5;++c4){
          vector<int> path = {0, c1, c2, c3, c4};
          if (all_unique(path)) {
            path.push_back(0);
            int l=0;
            for (int i=0;i<5;++i){
              l += matrix[path[i]][path[i+1]];
            }
            if(min == -1 || l < min){
              min = l;
            }
        }
      }}
    }
  }
  return min;
}

int six(vector<vector<int>>& matrix){
  int min = -1;
  for (int c1=1;c1<6;++c1){
    for (int c2=1;c2<6;++c2){
      for (int c3=1;c3<6;++c3){
        for (int c4=1;c4<6;++c4){
          for (int c5=1;c5<6;++c5){
            vector<int> path = {0, c1, c2, c3, c4, c5};
            if (all_unique(path)) {
              path.push_back(0);
              int l=0;
              for (int i=0;i<6;++i){
                l += matrix[path[i]][path[i+1]];
              }
              if(min == -1 || l < min){
                min = l;
              }
        }
      }}}
    }
  }
  return min;
}


int main(void){
    int N_cities;
    cin>>N_cities;
    vector<vector<int>> matrix(N_cities);

    int x;
    for (int i=0;i<N_cities;++i){
      matrix[i] = vector<int>();
      for (int j=0;j<N_cities;++j){
        cin>>x;
        if (x<0){
          cout<<"Try again"<<endl;
          return 0;
        }
        matrix[i].push_back(x);
      }
    }

    if (N_cities==4) {
      cout<<fourth(matrix)<<endl;
    }
    else if (N_cities==5){
      cout<<fifth(matrix)<<endl;
    }
    else {cout<<six(matrix)<<endl;}

    return 0;
}
